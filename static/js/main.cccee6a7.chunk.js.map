{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyup","event","setState","document","addEventListener","this","removeEventListener","text","length","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,eAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,eAV/C,oBAiBE,WACE,IAAMO,EAAOF,KAAKP,MAAMC,IAAIS,OAAS,EAAxB,mCACmBH,KAAKP,MAAMC,IAD9B,KAET,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,UAzBX,GAAyBG,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.cccee6a7.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const text = this.state.key.length > 0\n      ? `The last pressed key is [${this.state.key}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}